{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red29\green38\blue42;\red255\green255\blue255;\red0\green0\blue0;
\red0\green0\blue0;\red0\green0\blue0;\red255\green255\blue255;\red67\green91\blue103;\red69\green85\blue94;
}
{\*\expandedcolortbl;;\cssrgb\c14902\c19608\c21961;\cssrgb\c100000\c100000\c100000;\csgray\c0;
\csgray\c0\c0;\cssrgb\c0\c0\c0;\csgray\c100000;\cssrgb\c32941\c43137\c47843;\cssrgb\c34118\c40784\c44314;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \
#In this project I am using multiple LeetCode and HackerRank problems to demonstrate my skills in querying databases using SQL \
\
/* LeetCode Problem #595: \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write an SQL query to report the name, population, and area of the\'a0big countries. Return the result table in\'a0any order. */\
\
SELECT name, population, area\
FROM World\
WHERE area >= 3000000\
OR population >= 25000000;\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf4 \cb5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 /* LeetCode #596: \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write an SQL query to report all the classes that have\'a0at least five students. Return the result table in\'a0any order */\
\pard\pardeftab720\partightenfactor0
\
SELECT class \
FROM courses\
GROUP BY class\
HAVING COUNT(distinct student) >4;\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cb5 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 /* LeetCode #1757: \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Write an SQL query to find the ids of products that are both low fat and recyclable. Return the result table in\'a0
\f1\b any order
\f0\b0 . */\
\
SELECT product_id\
FROM Products\
WHERE low_fats = 'Y'\
AND recyclable = \'91Y\'92;\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf6 \cb7 /* LeetCode #584: Write an SQL query to report the names of the customer that are\'a0not referred by\'a0the customer with\'a0
\fs26 \strokec8 id = 2 */\
\
SELECT name\
FROM Customer\
WHERE referee_id <> 2\
OR referee_id IS NULL;
\fs28 \strokec2 \
\cf2 \cb3 \

\fs26 \cf6 /* HackerRank \'92The Report\'92 : \cb3 \strokec9 Generate a report containing three columns:\'a0Name,\'a0Grade\'a0and\'a0Mark.\'a0Excluding NAMES of those students who received a grade lower than\'a08. The report must be in descending order by grade  If there is more than one student with the same grade (8-10) assigned to them, order those particular students by their name alphabetically. Finally, if the grade is lower than 8, use "NULL" as their name and list them by their grades in descending order. If there is more than one student with the same grade (1-7) assigned to them, order those particular students by their marks in ascending order. */\
\
SELECT IF(GRADE < 8, NULL, NAME), GRADE, MARKS\
FROM STUDENTS JOIN GRADES\
WHERE MARKS BETWEEN MIN_MARK AND MAX_MARK\
ORDER BY GRADE DESC, NAME;\
\cf2 \cb3 \strokec2 \
\cf6 /* HackerRank \'91Top Competitors\'92: \cb3 \strokec9 Julia just finished conducting a coding contest, and she needs your help assembling the leaderboard! Write a query to print the respective\'a0hacker_id\'a0and\'a0name\'a0of hackers who achieved full scores for\'a0more than one\'a0challenge. Order your output in descending order by the total number of challenges in which the hacker earned a full score. If more than one hacker received full scores in same number of challenges, then sort them by ascending\'a0hacker_id. */\
\
SELECT h.hacker_id, h.name\
FROM submissions s\
INNER JOIN Challenges c\
ON s.challenge_id = c.challenge_id\
INNER JOIN difficulty d\
ON c.difficulty_level = d.difficulty_level\
INNER JOIN Hackers h\
ON s.hacker_id= h.Hacker_id\
WHERE s.score = d.score AND c.difficulty_level=d.difficulty_level\
GROUP BY h.hacker_id, h.name\
HAVING COUNT(s.hacker_id)>1\
ORDER BY COUNT(s.hacker_id) DESC, s.hacker_id asc;\
\
/* HackerRank \'91Olivander\'92s Inventory\'92: Harry Potter and his friends are at Ollivander's with Ron, finally replacing Charlie's old broken wand.\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec9 Hermione decides the best way to choose is by determining the minimum number of gold galleons needed to buy each\'a0non-evil\'a0wand of high power and age. Write a query to print the\'a0id,\'a0age,\'a0coins_needed, and\'a0power\'a0of the wands that Ron's interested in, sorted in order of descending\'a0power. If more than one wand has same power, sort the result in order of descending\'a0age. */\
\
SELECT w.id, p.age, w.coins_needed, w.power\
FROM Wands w\
INNER JOIN Wands_Property p\
ON w.code = p.code\
WHERE p.is_evil = 0\
AND w.coins_needed = (SELECT MIN(coins_needed) FROM Wands as w1 JOIN Wands_Property as p1 on w1.code=p1.code WHERE w1.power = w.power AND p1.age = p.age)\
ORDER BY w.power DESC, p.age DESC;\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \cb3 \strokec2 \

\fs28 \

\f2 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf2 \

\f0 \
}